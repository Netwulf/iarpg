# Railway Configuration for IA-RPG Backend
# Docs: https://docs.railway.app/deploy/config-as-code

build:
  builder: NIXPACKS
  # Note: Railway uses apps/api/railway.json as source of truth
  # This file is for documentation purposes
  startCommand: npm run start  # Actual command from railway.json
  watchPatterns:
    - "**/*.ts"
    - "**/*.js"
    - "package.json"

deploy:
  numReplicas: 1
  sleepApplication: false
  restartPolicyType: ON_FAILURE
  restartPolicyMaxRetries: 3

healthcheck:
  path: /health
  interval: 30
  timeout: 10
  initialDelay: 15

networking:
  serviceDomains:
    - iarpg-api.railway.app

env:
  # Port
  PORT: 3001

  # CORS
  CORS_ORIGIN: https://iarpg-web.vercel.app

  # Database (Supabase PostgreSQL)
  # Injected via Railway secret: ${{ DATABASE_URL }}

  # Auth
  # Injected via Railway secrets:
  # - ${{ NEXTAUTH_SECRET }}
  # - ${{ GOOGLE_CLIENT_ID }}
  # - ${{ GOOGLE_CLIENT_SECRET }}
  # - ${{ DISCORD_CLIENT_ID }}
  # - ${{ DISCORD_CLIENT_SECRET }}

  # OpenAI
  # Injected via Railway secret: ${{ OPENAI_API_KEY }}

  # Node Environment
  NODE_ENV: production

volumes:
  # Persistent storage for logs (if needed)
  - name: logs
    mountPath: /app/logs

# Resource Limits
resources:
  # MVP: 512MB RAM, 1 vCPU (Starter Plan $5/mês)
  # Growth: 2GB RAM, 2 vCPU (Standard Plan $20/mês)
  memory: 512Mi
  cpu: 1000m

# Monitoring & Observability
observability:
  # Railway built-in metrics
  metrics:
    enabled: true
    path: /metrics

  # Logs
  logs:
    enabled: true
    level: info

# Deployment Strategy
deployment:
  strategy: rolling
  maxUnavailable: 0
  maxSurge: 1

# Triggers
triggers:
  # Auto-deploy on main branch push
  branch: main

  # Webhooks (optional)
  # webhook: https://discord.com/api/webhooks/...
